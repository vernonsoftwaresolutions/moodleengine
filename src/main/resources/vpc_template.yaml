AWSTemplateFormatVersion: '2010-09-09'

  # Regional Map
Mappings:
  RegionMap:
    us-east-1:
      AZ1: us-east-1a
      AZ2: us-east-1b
      AZ3: us-east-1c
    us-west-1:
      AZ1: us-west-1a
      AZ2: us-west-1b
      AZ3: us-west-1c
    us-west-2:
      AZ1: us-west-2a
      AZ2: us-west-2b
      AZ3: us-west-2c

Parameters:
  #VPC Name
  VPCName:
    Type: String
    Description: Name of vpc to add ElasticCache to
  PublicRouteTable:
    Type: String
  PrivateRouteTable:
    Type: String
  Tenant:
    Type: String
    Default: DEV
    Description: Tenant name
  CidrBlock:
    Type: String
    Default: 192.168.0.0/16
  #WS cidrs
  WSSN1Cidr:
    Type: String
    Default: 192.168.4.0/24
  WSSN2Cidr:
    Type: String
    Default: 192.168.5.0/24
  WSSN3Cidr:
    Type: String
    Default: 192.168.6.0/24
  #APP cidrs
  APPSN1Cidr:
    Type: String
    Default: 192.168.14.0/24
  APPSN2Cidr:
    Type: String
    Default: 192.168.15.0/24
  APPSN3Cidr:
    Type: String
    Default: 192.168.16.0/24
  ##EFS cidrs
  EFSN1Cidr:
    Type: String
    Default: 192.168.24.0/24
  EFSN2Cidr:
    Type: String
    Default: 192.168.25.0/24
  EFSN3Cidr:
    Type: String
    Default: 192.168.26.0/24
  #DB cidrs
  DBSN1Cidr:
    Type: String
    Default: 192.168.34.0/24
  DBSN2Cidr:
    Type: String
    Default: 192.168.35.0/24
  #MC cidrs
  MCSN1Cidr:
    Type: String
    Default: 192.168.44.0/24


Resources:
  ##
  # Subnet route associations

  # WS routes
  WSSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WSSubnet1
      RouteTableId:
        !ImportValue
              Ref: PublicRouteTable
  WSSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WSSubnet2
      RouteTableId:
        !ImportValue
              Ref: PublicRouteTable
  WSSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WSSubnet3
      RouteTableId:
        !ImportValue
              Ref: PublicRouteTable
  # App routes
  APPSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: APPSubnet1
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable
  APPSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: APPSubnet2
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable
  APPSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: APPSubnet3
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable
  # DB routes
  DBSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: DBSubnet1
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable
  DBSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: DBSubnet2
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable
  # EFS routes
  EFSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: EFSubnet1
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable
  EFSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: EFSubnet2
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable
  EFSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: EFSubnet3
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable
  # ElasticCache routes
  MCSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: MCSubnet1
      RouteTableId:
        !ImportValue
              Ref: PrivateRouteTable

  ##
  # Web Tier Subnets
  ##
  WSSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: WSSN1Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ1 ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["WSSN1", Ref: Tenant ] ]
  WSSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: WSSN2Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ2 ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["WSSN2", Ref: Tenant ] ]
  WSSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: WSSN3Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ3 ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["WSSN3", Ref: Tenant ] ]
  ##
  # Application Tier Subnets
  ##
  APPSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: APPSN1Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ1 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["APPSN1", Ref: Tenant ] ]
  APPSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: APPSN2Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ2 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["APPSN2", Ref: Tenant ] ]
  APPSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: APPSN3Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ3 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["APPSN3", Ref: Tenant ] ]
  ##
  # Elastic File System Subnet definitions
  ##
  EFSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: EFSN1Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ1 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["EFSN1", Ref: Tenant ] ]
  EFSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: EFSN2Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ2 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["EFSN2", Ref: Tenant ] ]
  EFSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: EFSN3Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ3 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["EFSN3", Ref: Tenant ] ]
  ##
  # Database Subnet definitions
  ##
  DBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: DBSN1Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ1 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["DBSN1", Ref: Tenant ] ]
  DBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: DBSN2Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ2 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["DBSN2", Ref: Tenant ] ]
  ##
  # Elastic Cache Subnet definitions
  ##
  MCSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !ImportValue
          Ref: VPCName
      CidrBlock:
        Ref: MCSN1Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ1 ]
      Tags:
      - Key: Tenant
        Value:
          Ref: Tenant
      - Key: Name
        Value:
          !Join [ "", ["MCSN1", Ref: Tenant ] ]

Outputs:
  DBSubnet1:
    Description: DBSubnet1 Id
    Value: !Ref DBSubnet1
    Export:
      Name: !Join [ "", ["DBSubnet1", Ref: Tenant ] ]
  DBSubnet2:
    Description: DBSubnet2
    Value: !Ref DBSubnet2
    Export:
      Name: !Join [ "", ["DBSubnet2", Ref: Tenant ] ]
  EFSubnet1:
    Description: EFSubnet1 Id
    Value: !Ref EFSubnet1
    Export:
      Name: !Join [ "", ["EFSubnet1", Ref: Tenant ] ]
  EFSubnet2:
    Description: EFSubnet2 Id
    Value: !Ref EFSubnet2
    Export:
      Name: !Join [ "", ["EFSubnet2", Ref: Tenant ] ]
  EFSubnet3:
    Description: EFSubnet3 Id
    Value: !Ref EFSubnet3
    Export:
      Name: !Join [ "", ["EFSubnet3", Ref: Tenant ] ]
  MCSubnet1:
    Description: MCSubnet1 Id
    Value: !Ref MCSubnet1
    Export:
      Name: !Join [ "", ["MCSubnet1", Ref: Tenant ] ]
  APPSubnet1:
    Description: APPSubnet1 Id
    Value: !Ref APPSubnet1
    Export:
      Name: !Join [ "", ["APPSubnet1", Ref: Tenant ] ]
  APPSubnet2:
    Description: APPSubnet2 Id
    Value: !Ref APPSubnet2
    Export:
      Name: !Join [ "", ["APPSubnet2", Ref: Tenant ] ]
  APPSubnet3:
    Description: APPSubnet3 Id
    Value: !Ref APPSubnet3
    Export:
      Name: !Join [ "", ["APPSubnet3", Ref: Tenant ] ]
  WSSubnet1:
    Description: WSSubnet1 Id
    Value: !Ref WSSubnet1
    Export:
      Name: !Join [ "", ["WSSubnet1", Ref: Tenant ] ]
  WSSubnet2:
    Description: WSSubnet2 Id
    Value: !Ref WSSubnet2
    Export:
      Name: !Join [ "", ["WSSubnet2", Ref: Tenant ] ]
  WSSubnet3:
    Description: WSSubnet3 Id
    Value: !Ref WSSubnet3
    Export:
      Name: !Join [ "", ["WSSubnet3", Ref: Tenant ] ]
