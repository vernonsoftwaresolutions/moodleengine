AWSTemplateFormatVersion: '2010-09-09'

  # Regional Map
Mappings:
  RegionMap:
    us-east-1:
      AZ1: us-east-1a
      AZ2: us-east-1b
      AZ3: us-east-1c
    us-west-1:
      AZ1: us-west-1a
      AZ2: us-west-1b
      AZ3: us-west-1c
    us-west-2:
      AZ1: us-west-2a
      AZ2: us-west-2b
      AZ3: us-west-2c
Parameters:
  CidrBlock:
    Type: String
    Default: 192.168.0.0/16
  #Bastion cidrs
  BSTSN1Cidr:
    Type: String
    Default: 192.168.3.0/24
  #WS cidrs
  SQSSN1Cidr:
    Type: String
    Default: 192.168.4.0/24
  SQSSN2Cidr:
    Type: String
    Default: 192.168.5.0/24
  SQSSN3Cidr:
    Type: String
    Default: 192.168.6.0/24
  #APP cidrs
  APPSN1Cidr:
    Type: String
    Default: 192.168.14.0/24
  APPSN2Cidr:
    Type: String
    Default: 192.168.15.0/24
  APPSN3Cidr:
    Type: String
    Default: 192.168.16.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsHostnames: true
      CidrBlock:
        Ref: CidrBlock
      Tags:
      - Key: Name
        Value:
          "MAIN"
##
  # Internet GateWay
  # Conditional:  Only create if VPC doesn't already exist
  # The logic is a little backwards, could be reworked
  ##
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          !Join [ "", ["IG", "MAIN" ] ]
      - Key: Tenant
        Value:
          "MAIN"

  # attach the gateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: MD_PVT_ROUTE
      - Key: Tenant
        Value:
          "MAIN"
      - Key: Name
        Value:
          !Join [ "", ["RTB", "MAIN" ] ]

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          !Join [ "", ["PRT", "MAIN" ] ]
      - Key: Tenant
        Value:
          "MAIN"

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
##
  # Bastion routes
  SQSSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetBASTION
      RouteTableId:
        Ref: PublicRouteTable
##
  # Subnet route associations

  # SQS routes
  SQSSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SQSSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  SQSSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SQSSubnet2
      RouteTableId:
        Ref: PublicRouteTable
  SQSSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SQSSubnet3
      RouteTableId:
        Ref: PublicRouteTable
  # App routes
  APPSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: APPSubnet1
      RouteTableId:
        Ref: PrivateRouteTable
  APPSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: APPSubnet2
      RouteTableId:
        Ref: PrivateRouteTable
  APPSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: APPSubnet3
      RouteTableId:
        Ref: PrivateRouteTable
##
  # Web Tier Subnets
  ##
  SQSSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: SQSSN1Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ1 ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Tenant
        Value:
          "MAIN"
      - Key: Name
        Value:
          !Join [ "", ["SQSSN1", "MAIN" ] ]
  SQSSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: SQSSN2Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ2 ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Tenant
        Value:
          "MAIN"
      - Key: Name
        Value:
          !Join [ "", ["SQSSN2", "MAIN" ] ]
  SQSSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: SQSSN3Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ3 ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Tenant
        Value:
          "MAIN"
      - Key: Name
        Value:
          !Join [ "", ["SQSSN3", "MAIN" ] ]
  ##
  # Application Tier Subnets
  ##
  APPSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: APPSN1Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ1 ]
      Tags:
      - Key: Tenant
        Value:
          "MAIN"
      - Key: Name
        Value:
          !Join [ "", ["APPSN1", "MAIN" ] ]
  APPSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: APPSN2Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ2 ]
      Tags:
      - Key: Tenant
        Value:
          "MAIN"
      - Key: Name
        Value:
          !Join [ "", ["APPSN2", "MAIN" ] ]
  APPSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: APPSN3Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ3 ]
      Tags:
      - Key: Tenant
        Value:
          "MAIN"
      - Key: Name
        Value:
          !Join [ "", ["APPSN3", "MAIN" ] ]
 # Bastion Host subnet
  SubnetBASTION:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: BSTSN1Cidr
      AvailabilityZone:
        !FindInMap [ RegionMap, !Ref "AWS::Region", AZ1 ]
      Tags:
        - Key: Name
          Value: SANDBOX
Outputs:
  VPC:
    Description: Main VPC
    Value: !Ref VPC
    Export:
      Name: "MAIN"
  PublicRouteTable:
    Description: Public Route Table of Main VPC
    Value: !Ref PublicRouteTable
    Export:
      Name: "PublicRouteTable"
  PrivateRouteTable:
    Description: Private Route Table of Main VPC
    Value: !Ref PrivateRouteTable
    Export:
      Name: "PrivateRouteTable"
  BastionSubnet:
    Description: BastionSubnet Id
    Value: !Ref SubnetBASTION
    Export:
      Name: BastionSubnet
  APPSubnet1:
    Description: APPSubnet1 Id
    Value: !Ref APPSubnet1
    Export:
      Name: !Join [ "", ["APPSubnet1", "MAIN" ] ]
  APPSubnet2:
    Description: APPSubnet2 Id
    Value: !Ref APPSubnet2
    Export:
      Name: !Join [ "", ["APPSubnet2", "MAIN" ] ]
  APPSubnet3:
    Description: APPSubnet3 Id
    Value: !Ref APPSubnet3
    Export:
      Name: !Join [ "", ["APPSubnet3", "MAIN" ] ]
  SQSSubnet1:
    Description: SQSSubnet1 Id
    Value: !Ref SQSSubnet1
    Export:
      Name: !Join [ "", ["SQSSubnet1", "MAIN" ] ]
  SQSSubnet2:
    Description: SQSSubnet2 Id
    Value: !Ref SQSSubnet2
    Export:
      Name: !Join [ "", ["SQSSubnet2", "MAIN" ] ]
  SQSSubnet3:
    Description: SQSSubnet3 Id
    Value: !Ref SQSSubnet3
    Export:
      Name: !Join [ "", ["SQSSubnet3", "MAIN" ] ]